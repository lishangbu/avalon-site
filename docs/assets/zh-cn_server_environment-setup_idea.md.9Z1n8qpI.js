import{_ as e,c as t,o as s,ag as i}from"./chunks/framework.Byg7GP2M.js";const g=JSON.parse('{"title":"在IDE中打开项目","description":"","frontmatter":{},"headers":[],"relativePath":"zh-cn/server/environment-setup/idea.md","filePath":"zh-cn/server/environment-setup/idea.md","lastUpdated":1760569875000}'),r={name:"zh-cn/server/environment-setup/idea.md"};function n(l,a,o,p,d,h){return s(),t("div",null,[...a[0]||(a[0]=[i(`<h1 id="在ide中打开项目" tabindex="-1">在IDE中打开项目 <a class="header-anchor" href="#在ide中打开项目" aria-label="Permalink to &quot;在IDE中打开项目&quot;">​</a></h1><h2 id="下载源码" tabindex="-1">下载源码 <a class="header-anchor" href="#下载源码" aria-label="Permalink to &quot;下载源码&quot;">​</a></h2><p>通过git clone命令将项目克隆到本地:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:lishangbu/avalon.git</span></span></code></pre></div><h2 id="配置发工具" tabindex="-1">配置发工具 <a class="header-anchor" href="#配置发工具" aria-label="Permalink to &quot;配置发工具&quot;">​</a></h2><p>项目采用的是JDK24开发而成，在低于JDK24的环境下可能会出现一些莫名其妙的问题，建议使用JDK24以上版本。虽然我感觉我没有使用多少新特性。但项目大量使用了多行文本块以及record等新特性，因此，低于17大概是不行的。</p><p>JDK有多种方式，包括sdkman、homebrew、vfox、asdf等，笔者采用的是asdf，具体安装方式请参考各自官网。</p><p>个人推荐可以使用Intellij IDEA的新 具体可以通过File-&gt; Project Structure-&gt;Project-&gt;Project SDK-Download JDK一键配置。</p><p>为了开发体验，建议使用以下插件:</p><table tabindex="0"><thead><tr><th>插件</th><th>备注</th></tr></thead><tbody><tr><td><a href="https://plugins.jetbrains.com/plugin/6317-lombok" target="_blank" rel="noreferrer">Lombok</a></td><td>高版本IntelliJ IDEA内置此插件</td></tr><tr><td><a href="https://plugins.jetbrains.com/plugin/13847-easycode-plus" target="_blank" rel="noreferrer">EasyCode Plus</a></td><td>项目使用该插件进行传统三层架构布局生成，具体模板可以在根目录的EasyCode文件夹下找到</td></tr><tr><td><a href="https://plugins.jetbrains.com/plugin/9837-mybatiscodehelperpro" target="_blank" rel="noreferrer">MyBatisCodeHelperPro</a></td><td>部分功能可能要付费</td></tr><tr><td><a href="https://plugins.jetbrains.com/plugin/22455-spotless-applier" target="_blank" rel="noreferrer">Spotless Applier</a></td><td>使用spotless格式化代码，通过Settings &gt; Tools &gt; Actions on Save &gt; Run spotless 来启用</td></tr></tbody></table><p>之后就可以使用IDE打开对应项目了，</p><h3 id="生成运行必须的资源" tabindex="-1">生成运行必须的资源 <a class="header-anchor" href="#生成运行必须的资源" aria-label="Permalink to &quot;生成运行必须的资源&quot;">​</a></h3><p>从安全与git仓库占用等角度考虑，部分密钥以及IP数据库等大型文件并没有放入，因此在运行项目之前，需要执行项目根路径下的<code>scripts</code>文件夹中的<code>rsa-key-pair.sh</code>与<code>ip-data-downloader.sh</code>进行JWT RSA密钥生成与IP数据下载。</p><h3 id="初始化数据库" tabindex="-1">初始化数据库 <a class="header-anchor" href="#初始化数据库" aria-label="Permalink to &quot;初始化数据库&quot;">​</a></h3><p>项目本身采用的是<code>postgres</code>数据库,用户只需要完成数据库的创建与配置。如果采用前文的docker-compose文件，那就什么都不需要改直接启动就行。项目的建表与数据初始化会在项目启动时自动通过liquibase完成。 暂时没做其他数据库的支持。如果没有进行数据的初始化，请检查以下内容:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  liquibase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><h3 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h3><p>执行avalon-server模块下的AvalonStandaloneServerApplication的main方法，IDE会启动一个可运行的Spring Boot项目了。</p>`,18)])])}const k=e(r,[["render",n]]);export{g as __pageData,k as default};
